{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport Gatekeeper from 'containers/Gatekeeper';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport fservice from 'services/fservice';\nimport { ArrowLeft } from 'svgs';\nimport Layout from 'components/Layout';\nimport Button from 'components/Buttons';\nimport CredentialForm from 'components/CredentialForm';\nimport ProfileContext, { ProfileProvider } from 'containers/Profile';\nexport default (function () {\n  return React.createElement(Gatekeeper, null, React.createElement(ProfileProvider, null, React.createElement(ProfilePage, null)));\n});\n\nfunction ProfilePage() {\n  // UI State\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isFormVisible = _React$useState2[0],\n      setIsFormVisible = _React$useState2[1];\n\n  var profile = React.useContext(ProfileContext);\n  return React.createElement(Layout, null, React.createElement(\"nav\", {\n    className: \"mb-3\"\n  }, React.createElement(Link, {\n    href: \"/dashboard\"\n  }, React.createElement(\"a\", {\n    className: \"inline-flex items-center py-2 text-teal-7 hover:text-teal-8 no-underline font-header text-base\"\n  }, React.createElement(ArrowLeft, {\n    className: \"w-6 h-6 mr-1\"\n  }), React.createElement(\"div\", null, \"dashboard\")))), React.createElement(\"h1\", {\n    className: \"text-xl mb-6\"\n  }, \"Profile\"), profile !== null && React.createElement(\"section\", {\n    className: \"mb-6\"\n  }, React.createElement(\"h2\", {\n    className: \"text-lg leading-tight mb-2\"\n  }, \"Add Jira Credentials\"), React.createElement(\"p\", {\n    className: \"mb-3 leading-normal\"\n  }, \"Credentials are stored in a write only database for your security. These credentials are only transmitted directly to the Jira server over an https connection. If you are having trouble with the connection to Jira you may overwrite your credentials with this form.\"), isFormVisible || !profile.hasCreds ? React.createElement(CredentialForm, null) : React.createElement(Button, {\n    onClick: function onClick() {\n      return setIsFormVisible(true);\n    }\n  }, \"Update Jira Credentials\")), React.createElement(\"hr\", {\n    className: \"my-6 border-b border-grey-default\"\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"bg-grey-1 text-grey-9 border leading-none px-4 py-3 rounded-sm w-full sm:w-1/2 md:w-1/4\",\n    onClick: function onClick() {\n      return fservice.signOut().then(function () {\n        return Router.push('/');\n      });\n    }\n  }, \"Log out\"));\n}","map":null,"metadata":{},"sourceType":"module"}