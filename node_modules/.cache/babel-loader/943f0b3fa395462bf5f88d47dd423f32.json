{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport parseTicketKey from 'utils/parseJiraTicketKey';\nimport { PlusCircle, Loader } from 'svgs';\nimport Input from 'components/Input';\nimport Button from 'components/Buttons';\nimport CredentialForm from 'components/CredentialForm';\nimport ErrorBox from 'components/ErrorBox';\nimport ProfileContext from 'containers/Profile';\n\nvar JiraForm = function JiraForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n  // See if the user hasCreds\n  var profile = React.useContext(ProfileContext);\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tid = _React$useState2[0],\n      updateTID = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      formErrors = _React$useState4[0],\n      updateErrors = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isSubmitting = _React$useState6[0],\n      updateIsSubmitting = _React$useState6[1];\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    submitManager();\n  };\n\n  var submitManager =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var parsedTID;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              parsedTID = parseTicketKey(tid);\n\n              if (!(parsedTID === null)) {\n                _context.next = 4;\n                break;\n              }\n\n              updateErrors('The Jira Key entered was not valid.');\n              return _context.abrupt(\"return\");\n\n            case 4:\n              updateIsSubmitting(true);\n              _context.prev = 5;\n              _context.next = 8;\n              return onSubmit(parsedTID);\n\n            case 8:\n              updateTID('');\n              updateErrors('');\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](5);\n              updateErrors(_context.t0.message);\n\n            case 15:\n              updateIsSubmitting(false);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 12]]);\n    }));\n\n    return function submitManager() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  if (profile === null) {\n    return React.createElement(\"div\", {\n      className: \"text-center text-teal-7\"\n    }, React.createElement(Loader, {\n      className: \"animate-spin w-6 h-6\"\n    }));\n  }\n\n  if (!profile.hasCreds) {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      className: \"mb-3 leading-normal\"\n    }, \"Please enter your Jira credentials below to start importing tickets.\"), React.createElement(CredentialForm, null), React.createElement(\"div\", {\n      className: \"mb-6\"\n    }), React.createElement(\"p\", {\n      className: \"mb-3 leading-tight text-sm\"\n    }, \"Credentials are stored in a write only database for your security. These credentials are only transmitted directly to the Jira server over an https connection.\"));\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    autoComplete: \"off\"\n  }, formErrors && React.createElement(ErrorBox, {\n    className: \"mb-6\"\n  }, formErrors), React.createElement(\"div\", {\n    className: \"mb-6\"\n  }, React.createElement(Input, {\n    \"data-lpignore\": \"true\",\n    id: \"jira-tid\",\n    label: \"Jira Ticket Key\",\n    value: tid,\n    onChange: function onChange(e) {\n      updateErrors('');\n      updateTID(e.target.value);\n    },\n    required: true\n  }), React.createElement(\"div\", {\n    className: \"mb-3\"\n  }, React.createElement(\"p\", {\n    className: \"text-sm text-grey-7 italic\"\n  }, \"ie. AWK-1234 or the URL to the ticket\"))), React.createElement(Button, {\n    type: \"submit\",\n    disabled: isSubmitting\n  }, isSubmitting ? React.createElement(Loader, {\n    className: \"animate-spin w-5 h-5 mr-2\"\n  }) : React.createElement(PlusCircle, {\n    className: \"w-5 h-5 mr-2\"\n  }), \"Import from Jira\"));\n};\n\nexport default JiraForm;","map":null,"metadata":{},"sourceType":"module"}